name: Test

on:
  push:
    branches: [main]
  pull_request:

env:
  PYTHON_VERSION: "3.13"
  UV_VERSION: "0.5.x"
  UV_FROZEN: "1"
  UV_NO_SYNC: "1"

jobs:
  ruff:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install ruff
        run: uv sync --only-group ruff

      - name: Run ruff
        run: uv run -- ruff check

  mypy:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --no-dev --group typing

      - name: Run mypy
        run: uv run -- mypy .

  # build-docs:
  #   if: github.event.pull_request.draft == false
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install uv
  #       uses: astral-sh/setup-uv@v3
  #       with:
  #         version: ${{ env.UV_VERSION }}

  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}

  #     - name: Install the project
  #       run: uv sync

  #     - name: Build docs
  #       run: uv run -- mkdocs build

  # pytest:
  #   if: github.event.pull_request.draft == false
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-latest]
  #       python-version: ["3.13-dev", "3.12", "3.11", "3.10", "3.9", "3.8"]
  #       # Python 3.8 & 3.9 are on macos-13 but not macos-latest (macos-14-arm64)
  #       # https://github.com/actions/setup-python/issues/696#issuecomment-1637587760
  #       exclude:
  #         - os: macos-latest
  #           python-version: "3.9"
  #         - os: macos-latest
  #           python-version: "3.8"
  #       include:
  #         - os: macos-13
  #           python-version: "3.9"
  #         - os: macos-13
  #           python-version: "3.8"
  #   env:
  #     OS: ${{ matrix.os }}
  #     PYTHON: ${{ matrix.python-version }}
  #     COVERAGE_FILE: .coverage.${{ matrix.os }}-${{ matrix.python-version }}

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Install uv
  #     uses: astral-sh/setup-uv@v3
  #     with:
  #       version: ${{ env.UV_VERSION }}

  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ matrix.python-version }}

  #   - name: Install the project
  #     run: uv sync

  #   - name: Run pytest
  #     run: uv run -- coverage run --source=./pdag -m pytest ./tests --import-mode importlib

  #   - name: Generate coverage report
  #     run: |
  #       uv run -- coverage report -m
  #       uv run -- coverage xml -o ./coverage.xml

  #   - name: Upload coverage to Codecov
  #     uses: codecov/codecov-action@v4
  #     with:
  #       file: coverage.xml
  #       env_vars: OS,PYTHON
  #       fail_ci_if_error: false # TODO: Change to true
  #       token: ${{ secrets.CODECOV_TOKEN }}
